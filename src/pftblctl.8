.\"
.\" Copyright (c) 2020, 2021 Matthias Pressfreund
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 8 2021 $
.Dt PFTBLCTL 8
.Os
.Sh NAME
.Nm pftblctl
.Nd control the
.Xr pftbld 8
daemon
.Sh SYNOPSIS
.Nm
.Op Fl q
.Op Fl s Ar socket
.Ar command/address
.Op Ar argument ...
.Sh DESCRIPTION
.Nm
acually is a wrapper script facilitating the use of
.Xr pftbld 8
in verbose pipe mode.
It is primarily intended to be used for sending commands to the
.Ar control socket ,
but may as well be utilized to forward client data to the corresponding
.Ar data socket .
.Pp
The options are as follows:
.Bl -tag -width "-s socket"
.It Fl q
Quiet mode, generally preventing output on
.Ar stdout .
This flag may be specified multiple times.
If specified just once, the
.Ar command
will be sent to the server and
.Nm
will silently wait for the conversation to finish.
If specified more than once, right after having sent the
.Ar command
to the server
.Nm
will return immediately, not awaiting any reply.
Please note that, in this case,
.Nm
may even return before the
.Ar command
was acually executed on the server.
.It Fl s Ar socket
Specifies the
.Ar socket
used to send data to and defaults to
.Pa /var/run/pftbld.sock .
.El
.Sh COMMANDS
On the
.Pa control socket ,
the following commands are accepted:
.Bl -tag -width Ds -offset Ds
.It Ic config Ar option
Runs the specified configuration
.Ar option .
Valid options are:
.Bl -tag -width Ds
.It Ic print
Prints the current configuration to
.Ar stdout .
.It Ic reload
Reconfigures
.Xr pftbld 8
by initiating a reload of its configuration file
.Xr pftbld.conf 5 .
Please note that, figuring out whether or not reloading completed successfully
after all, an appropriate message will be printed either into the daemon's or
the system log, respectively.
.Pp
Alternative means to achieve the same goal are for example the
.Xr rcctl 8
utility:
.Pp
.Dl # rcctl reload pftbld
.Pp
or the
.Xr pkill 1
command:
.Pp
.Dl # pkill -HUP pftbld
.El
.It Ic drop Oo Ic recap Oc Ar address/network | target ...
Deletes client entries matching the given
.Ar address/network
and
.Ar target
specifiers ahead of schedule from corresponding
.Xr pf 4
tables and from the daemon's memory.
Since normally every single deletion will be logged, specifying large
.Ar network
ranges may lead to log files getting flooded with deletion entries.
This can be avoided by passing the
.Ic recap
keyword which will make sure just a short summary (providing the number of
deleted addresses per
.Ar target
and the overall number of dropped client entries) gets written into the log
file instead.
.It Ic dump Oo Ar target ... Oc
Prints managed addresses and meta-data (number of hits and timestamp of last
occurrence) of the specified
.Ar target
names to
.Ar stdout .
If there is no
.Ar target
specified, addresses of all targets will be printed.
.It Ic expire Oo Ic recap Oc Ar address/network | target ...
Like the
.Ic drop
command, but deletes matching client entries from
.Xr pf 4
tables only, still keeping them memorized.
.It Ic list Oo Ar option ... Oc Oo Ic from Ar address/network | target ... Oc
Prints a list of memorized client information to
.Ar stdout .
The list will be reversely ordered by expiration/drop date with the next event
printed last.
There are multiple ways to filter the output.
One or more
.Ar address/network
and/or
.Ar target
specifiers may be passed after the
.Ic from
keyword.
Beyond that, one or more
.Ar option
may be specified to further narrow down the result of the query.
Valid options are:
.Bl -tag -width Ds
.It Ic active | inactive
Matches only clients currently either
.Ic active ,
i.e. present in at least one, or
.Ic inactive ,
i.e. not present in any
.Xr pf 4
table.
.It Ic addresses
Reduces client information to the IP address and omits any further output.
.It Ic next Ar limit
Outputs clients only until a maximum
.Ar limit
of upcoming events.
.El
.It Ic save Oo Ar target ... Oc
Writes managed addresses and meta-data (number of hits and timestamp of last
occurrence) of the specified
.Ar target
names to the corresponding
.Ic persist
.Ar path
specified in the configuration file
.Xr pftbld.conf 5 ,
or (if not specified) no action will be performed.
If there is no
.Ar target
specified, addresses of all targets will be saved.
.It Ic self-exclude Oo Ar address/network | Ic remove Oc
Writes
.Ar address/network
into the first location of the global
.Ic exclude
list and is intended to be used for the publicly visible
.Ar address/network
.Xr pftbld 8
is running on.
If the
.Ic remove
keyword is used instead of an
.Ar address/network ,
the current self-exclude will be deleted.
If called without parameter, the current self-exclude will be printed to
.Ar stdout .
.It Ic status
Prints a status report to
.Ar stdout .
.It Ic verbose Oo Ar level Oc
Get/Set the verbosity
.Ar level .
If issued without parameter, the current level will be printed to
.Ar stdout .
.El
.Sh FILES
.Bl -tag -width "/var/run/pftbld.sock" -compact
.It Pa /var/log/pftbld.log
Default log file.
.It Pa /var/run/pftbld.sock
Default control socket.
.El
.Sh EXIT STATUS
.Nm
returns 0 when it was able to successfully send a
.Ar command
to the server and, unless quietened, also successfully read the server's reply,
and returns >0 otherwise.
.Pp
Please note that the
.Nm
exit status does not tell anything about success or failure of the
.Ar command
running on the server.
To gain that information, catching the reply sent from the server along with
examining the server/system log is the way to go.
.Sh EXAMPLES
Here's an example for a
.Ic status
report:
.Bd -literal -offset indent
# pftblctl status
Self-exclude: [129.128.5/24]
Verbosity level: 0
Client count:
	target [www]: 249 (7 active)
Next scheduled event:
	[11.22.33.44]:[www]:(2x:50m12s)
		expires from { attackers } in 9m48s,
		on [21/Jul/2020:11:22:56 +0200]
.Ed
.Pp
Figuring out how many managed clients from the
.Pa 192/8
network received on the
.Pa www
target are currently present in a
.Xr pf 4
table may be accomplished like this:
.Bd -literal -offset indent
# pftblctl list active addresses from www 192/8 | wc -l
       3
.Ed
.Pp
The next example shows a
.Pa control
command deleting the address
.Pa 11.22.33.44
for the
.Pa www
target from memory:
.Bd -literal -offset indent
# pftblctl drop 11.22.33.44 www
1 client entry dropped.
.Ed
.Pp
The corresponding log entry might look like this:
.Bd -literal -offset indent
[...] [11.22.33.44]:[www]:(2x:1h3m17s) dropped.
.Ed
.Pp
Last but not least,
.Nm
may also be used to send client data to the server:
.Bd -literal -offset indent
# pftblctl -s /var/www/run/pftbld-www.sock 11.22.33.44 "Test 1"
ACK
.Ed
.Pp
Also note the server acknowledge being printed to
.Pa stdout
indicating that the daemon has successfully received and processed all
transmitted data.
.Sh SEE ALSO
.Xr pf 4 ,
.Xr pftbld.conf 5 ,
.Xr pftbld 8
.Sh AUTHORS
.An -nosplit
The
.Xr pftbld 8
program was written by
.An Matthias Pressfreund .
